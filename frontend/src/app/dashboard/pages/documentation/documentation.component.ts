import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DocumentTemplatesComponent } from './components/document-templates/document-templates.component';
import { DocumentListComponent } from './components/document-list/document-list.component';
import { ReportGeneratorComponent } from './components/report-generator/report-generator.component';
import { DocumentEditorComponent } from './components/document-editor/document-editor.component';
import { Document, DocumentFilter, DocumentTemplate, ReportData } from './interfaces/documentation.interface';
import { DocumentViewComponent } from './components/document-view/document-view.component';
import { DocumentSectionComponent } from './components/document-section/document-section.component';

@Component({
  selector: 'app-documentation',
  imports: [
    CommonModule,
    DocumentTemplatesComponent,
    DocumentListComponent,
    ReportGeneratorComponent,
    DocumentEditorComponent,
    DocumentViewComponent,
    DocumentSectionComponent
  ],
  templateUrl: './documentation.component.html',
  styleUrl: './documentation.component.scss'
})
export class DocumentationComponent implements OnInit {
  activeView = 'documents';
  editingDocument = false;

  // Templates
  documentTemplates: DocumentTemplate[] = [];
  selectedTemplate: DocumentTemplate | null = null;

  // Documents
  documents: Document[] = [];
  currentDocument: Document | null = null;

  // Reports
  reportTemplates: ReportData[] = [];
  scheduledReports: ReportData[] = [];
  reportHistory: ReportData[] = [];

  ngOnInit() {
    // Load mock data
    this.loadMockData();
  }

  loadMockData() {
    // Document templates
    this.documentTemplates = [
      {
        id: 'infra-overview',
        name: '–û–±–∑–æ—Ä –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        description: '–®–∞–±–ª–æ–Ω –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
        category: 'infrastructure',
        icon: 'üñ•Ô∏è',
        sections: [
          {
            id: 'overview',
            title: '–û–±—â–∏–π –æ–±–∑–æ—Ä',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ –æ–±—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...',
            required: true
          },
          {
            id: 'servers',
            title: '–°–µ—Ä–≤–µ—Ä—ã',
            type: 'table',
            required: true
          },
          {
            id: 'network',
            title: '–°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ —Å–µ—Ç–µ–≤—É—é –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É...'
          },
          {
            id: 'diagram',
            title: '–î–∏–∞–≥—Ä–∞–º–º–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã',
            type: 'image'
          }
        ]
      },
      {
        id: 'security-policy',
        name: '–ü–æ–ª–∏—Ç–∏–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        description: '–®–∞–±–ª–æ–Ω –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        category: 'security',
        icon: 'üõ°Ô∏è',
        sections: [
          {
            id: 'intro',
            title: '–í–≤–µ–¥–µ–Ω–∏–µ',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ —Ü–µ–ª–∏ –∏ –æ–±–ª–∞—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...',
            required: true
          },
          {
            id: 'policies',
            title: '–ü–æ–ª–∏—Ç–∏–∫–∏',
            type: 'list',
            required: true
          },
          {
            id: 'procedures',
            title: '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...'
          },
          {
            id: 'compliance',
            title: '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º',
            type: 'text',
            placeholder: '–£–∫–∞–∂–∏—Ç–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª–∏—Ç–∏–∫–∞...'
          }
        ]
      },
      {
        id: 'network-config',
        name: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ç–∏',
        description: '–®–∞–±–ª–æ–Ω –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Ç–µ–≤–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
        category: 'network',
        icon: 'üåê',
        sections: [
          {
            id: 'topology',
            title: '–¢–æ–ø–æ–ª–æ–≥–∏—è —Å–µ—Ç–∏',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ —Ç–æ–ø–æ–ª–æ–≥–∏—é —Å–µ—Ç–∏...',
            required: true
          },
          {
            id: 'ip-plan',
            title: 'IP-–ø–ª–∞–Ω',
            type: 'table',
            required: true
          },
          {
            id: 'vlans',
            title: 'VLAN-—ã',
            type: 'table'
          },
          {
            id: 'routing',
            title: '–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è',
            type: 'text',
            placeholder: '–û–ø–∏—à–∏—Ç–µ —Å—Ö–µ–º—É –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏...'
          },
          {
            id: 'config-snippets',
            title: '–ü—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
            type: 'code'
          }
        ]
      }
    ];

    // Documents
    this.documents = [
      {
        id: 'doc1',
        name: '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¶–û–î',
        templateId: 'infra-overview',
        createdAt: '2024-05-10T10:00:00Z',
        updatedAt: '2024-05-15T14:30:00Z',
        createdBy: '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ò–≤–∞–Ω–æ–≤',
        status: 'published',
        sections: {
          'overview': '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¶–û–î —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ 3 —Å—Ç–æ–µ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞–º–∏ –∏ —Å–µ—Ç–µ–≤—ã–º –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ–º...',
          'servers': {
            headers: ['–ò–º—è', 'IP', '–û–°', '–†–æ–ª—å'],
            rows: [
              ['srv-app-01', '10.0.1.10', 'Ubuntu 22.04', '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'],
              ['srv-db-01', '10.0.1.20', 'Ubuntu 22.04', '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö'],
              ['srv-mon-01', '10.0.1.30', 'Ubuntu 22.04', '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥']
            ]
          },
          'network': '–°–µ—Ç–µ–≤–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä—ã Cisco –∏ –∫–æ–º–º—É—Ç–∞—Ç–æ—Ä—ã...',
          'diagram': {
            url: 'https://via.placeholder.com/800x400',
            caption: '–î–∏–∞–≥—Ä–∞–º–º–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¶–û–î'
          }
        },
        tags: ['–∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞', '—Ü–æ–¥', '—Å–µ—Ä–≤–µ—Ä—ã']
      },
      {
        id: 'doc2',
        name: '–ü–æ–ª–∏—Ç–∏–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        templateId: 'security-policy',
        createdAt: '2024-04-20T09:15:00Z',
        updatedAt: '2024-05-12T11:45:00Z',
        createdBy: '–ï–ª–µ–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        status: 'draft',
        sections: {
          'intro': '–î–∞–Ω–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...',
          'policies': [
            '–ü–æ–ª–∏—Ç–∏–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º',
            '–ü–æ–ª–∏—Ç–∏–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç –≤—Ä–µ–¥–æ–Ω–æ—Å–Ω–æ–≥–æ –ü–û',
            '–ü–æ–ª–∏—Ç–∏–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è',
            '–ü–æ–ª–∏—Ç–∏–∫–∞ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã'
          ],
          'procedures': '–ü—Ä–æ—Ü–µ–¥—É—Ä—ã –≤–∫–ª—é—á–∞—é—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, –∞—É–¥–∏—Ç –¥–æ—Å—Ç—É–ø–∞...',
          'compliance': '–ü–æ–ª–∏—Ç–∏–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º ISO 27001, GDPR –∏ –§–ó-152...'
        },
        tags: ['–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–ø–æ–ª–∏—Ç–∏–∫–∞', 'iso27001']
      }
    ];

    // Report templates
    this.reportTemplates = [
      {
        id: 'server-health',
        name: '–û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤',
        type: 'server',
        period: 'daily',
        format: 'pdf',
        config: {
          sections: ['overview', 'performance', 'alerts'],
          filters: { status: 'all' }
        }
      },
      {
        id: 'network-traffic',
        name: '–û—Ç—á–µ—Ç –æ —Å–µ—Ç–µ–≤–æ–º —Ç—Ä–∞—Ñ–∏–∫–µ',
        type: 'network',
        period: 'weekly',
        format: 'html',
        config: {
          sections: ['summary', 'bandwidth', 'anomalies'],
          filters: { period: '7d' }
        }
      },
      {
        id: 'security-incidents',
        name: '–û—Ç—á–µ—Ç –ø–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        type: 'security',
        period: 'monthly',
        format: 'pdf',
        config: {
          sections: ['summary', 'incidents', 'recommendations'],
          filters: { severity: 'all' }
        }
      }
    ];

    // Scheduled reports
    this.scheduledReports = [
      {
        id: 'sched1',
        name: '–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏',
        type: 'server',
        period: 'weekly',
        format: 'pdf',
        schedule: {
          enabled: true,
          frequency: 'weekly',
          day: 1, // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
          time: '08:00',
          recipients: ['admin@example.com', 'manager@example.com']
        },
        lastGenerated: '2024-05-13T08:00:00Z',
        config: {
          sections: ['overview', 'performance', 'recommendations'],
          filters: { status: 'all' }
        }
      }
    ];

    // Report history
    this.reportHistory = [
      {
        id: 'hist1',
        name: '–û—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤',
        type: 'server',
        period: 'daily',
        format: 'pdf',
        lastGenerated: '2024-05-15T08:00:00Z',
        config: {
          sections: ['overview', 'performance', 'alerts'],
          filters: { status: 'all' }
        }
      },
      {
        id: 'hist2',
        name: '–û—Ç—á–µ—Ç –æ —Å–µ—Ç–µ–≤–æ–º —Ç—Ä–∞—Ñ–∏–∫–µ',
        type: 'network',
        period: 'weekly',
        format: 'html',
        lastGenerated: '2024-05-14T09:30:00Z',
        config: {
          sections: ['summary', 'bandwidth', 'anomalies'],
          filters: { period: '7d' }
        }
      }
    ];
  }

  setActiveView(view: string) {
    this.activeView = view;
  }

  // Document template methods
  onSelectTemplate(template: DocumentTemplate) {
    this.selectedTemplate = template;
    this.currentDocument = this.createEmptyDocument(template);
    this.editingDocument = true;
  }

  onCreateTemplate() {
    // Logic for creating a new template
    console.log('Create new template');
  }

  // Document methods
  onSelectDocument(document: Document) {
    // Find the template for this document
    const template = this.documentTemplates.find(t => t.id === document.templateId);
    if (template) {
      this.selectedTemplate = template;
      this.currentDocument = { ...document };
      this.editingDocument = true;
    }
  }

  onEditDocument(document: Document) {
    this.onSelectDocument(document);
  }

  onExportDocument(document: Document) {
    console.log('Export document', document);
  }

  onExportDocumentWithFormat(data: {document: Document, format?: string}) {
    console.log('Export document with format', data);
  }

  onDeleteDocument(document: Document) {
    this.documents = this.documents.filter(d => d.id !== document.id);
  }

  onCreateDocument() {
    // Show templates to select one
    console.log('Create new document');
  }

  onDocumentFilterChange(filter: DocumentFilter) {
    console.log('Filter changed', filter);
    // Apply filters to documents
  }

  onSaveDocument(document: Document) {
    const index = this.documents.findIndex(d => d.id === document.id);
    if (index >= 0) {
      this.documents[index] = {
        ...document,
        updatedAt: new Date().toISOString()
      };
    } else {
      this.documents.push({
        ...document,
        updatedAt: new Date().toISOString()
      });
    }
    this.editingDocument = false;
  }

  onPublishDocument(document: Document) {
    document.status = 'published';
    this.onSaveDocument(document);
  }

  onPreviewDocument(document: Document) {
    console.log('Preview document', document);
  }

  onCancelEdit() {
    this.editingDocument = false;
    this.currentDocument = null;
    this.selectedTemplate = null;
  }

  // Report methods
  onSelectReportTemplate(template: ReportData) {
    console.log('Select report template', template);
  }

  onCreateReport() {
    console.log('Create new report');
  }

  onEditReport(report: ReportData) {
    console.log('Edit report', report);
  }

  onGenerateReport(report: ReportData) {
    console.log('Generate report', report);

    // Add to history
    const historyReport = {
      ...report,
      id: `hist-${Date.now()}`,
      lastGenerated: new Date().toISOString()
    };
    this.reportHistory = [historyReport, ...this.reportHistory];
  }

  onDeleteReport(report: ReportData) {
    this.scheduledReports = this.scheduledReports.filter(r => r.id !== report.id);
  }

  onViewReport(report: ReportData) {
    console.log('View report', report);
  }

  onDownloadReport(report: ReportData) {
    console.log('Download report', report);
  }

  onRegenerateReport(report: ReportData) {
    console.log('Regenerate report', report);

    // Update history
    const index = this.reportHistory.findIndex(r => r.id === report.id);
    if (index >= 0) {
      this.reportHistory[index] = {
        ...report,
        lastGenerated: new Date().toISOString()
      };
    }
  }

  // Helper methods
  createEmptyDocument(template: DocumentTemplate): Document {
    return {
      id: `doc-${Date.now()}`,
      name: '–ù–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç',
      templateId: template.id,
      createdAt: new Date().toISOString(),
      updatedAt: new Date().toISOString(),
      createdBy: '–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      status: 'draft',
      sections: {},
      tags: []
    };
  }
}
