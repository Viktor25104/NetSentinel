package platform.netsentinel.controller;

import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;
import platform.netsentinel.dto.agent.ServerInfoDto;
import platform.netsentinel.model.Server;
import platform.netsentinel.service.ServerService;

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç WebSocket-—Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–≥–µ–Ω—Ç–æ–≤ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.
 */
@Controller
public class ServerWebSocketController {

    private final ServerService serverService;
    private final SimpMessagingTemplate messagingTemplate;

    public ServerWebSocketController(ServerService serverService, SimpMessagingTemplate messagingTemplate) {
        this.serverService = serverService;
        this.messagingTemplate = messagingTemplate;
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤–∏—á–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –æ—Ç –∞–≥–µ–Ω—Ç–∞.
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç sessionId –æ–±—Ä–∞—Ç–Ω–æ –∞–≥–µ–Ω—Ç—É –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏.
     *
     * @param info –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞
     */
    @MessageMapping("/register")
    public void registerServer(ServerInfoDto info) {
        System.out.println("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç –∞–≥–µ–Ω—Ç–∞: " + info);

        String sessionId = serverService.registerOrUpdateServer(info);
        String sessionChannel = "/queue/session/" + info.ip();

        messagingTemplate.convertAndSend(sessionChannel, sessionId);

        System.out.println("‚úÖ sessionId –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–≥–µ–Ω—Ç—É: " + sessionId);
    }


    private String convertUptime(long seconds) {
        long hours = seconds / 3600;
        return hours + "h";
    }
}
