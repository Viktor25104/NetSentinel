package platform.netsentinel.websocket.handler.impl;

import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.extern.slf4j.Slf4j;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Component;
import platform.netsentinel.dto.agent.AgentResponse;
import platform.netsentinel.dto.agent.ServerInfoDto;
import platform.netsentinel.service.ServerService;
import platform.netsentinel.websocket.handler.WebSocketMessageHandler;

@Slf4j
@Component
public class InfoResponseHandler implements WebSocketMessageHandler {

    private final ServerService serverService;

    public InfoResponseHandler(ServerService serverService) {
        this.serverService = serverService;
    }

    @Override
    public String getType() {
        return "info";
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç —Ç–∏–ø–∞ `info` –æ—Ç –∞–≥–µ–Ω—Ç–∞.
     * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏ –≤ –ë–î.
     * –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç –∏ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç.
     *
     * @param response           –æ–±—ä–µ–∫—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–≥–µ–Ω—Ç–∞
     * @param messagingTemplate  —à–∞–±–ª–æ–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ STOMP
     */
    @Override
    public void handle(AgentResponse response, SimpMessagingTemplate messagingTemplate) {
        log.info("üì¶ –ü–æ–ª—É—á–µ–Ω info –æ—Ç–≤–µ—Ç –æ—Ç session {}: {}", response.sessionId(), response.payload());

        try {
            ObjectMapper mapper = new ObjectMapper();
            ServerInfoDto info = mapper.convertValue(response.payload(), ServerInfoDto.class);

            serverService.updateServerInfo(info);
            messagingTemplate.convertAndSend("/topic/agent/" + response.sessionId() + "/info", info);
        } catch (Exception e) {
            log.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ info: {}", e.getMessage(), e);
        }
    }
}

